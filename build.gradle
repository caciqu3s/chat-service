buildscript {
	repositories {
		jcenter()    // Bintray's repository - a fast Maven Central mirror & more
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0' // If a newer version is available, use it
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}


group = 'com.seberino'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven {
		url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT repository (if needed)
	}
	mavenCentral()
	jcenter()
}

apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks



dependencyManagement {
	imports {
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:2.0.2"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.flywaydb:flyway-core'
	implementation 'com.google.cloud:spring-cloud-gcp-starter'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'
	//implementation(platform('org.springframework.cloud:spring-cloud-gcp-dependencies:2.0.3-SNAPSHOT'))
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = System.getenv('GOOGLE_CLOUD_PROJECT')
		version = '1'
	}
}

test {
	useJUnitPlatform()
}
